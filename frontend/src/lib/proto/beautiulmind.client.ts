// @generated by protobuf-ts 2.11.1
// @generated from protobuf file "beautiulmind.proto" (package "beautifulmind", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { BeautifulMind } from "./beautiulmind";
import type { Card } from "./beautiulmind";
import type { AddCardRequest } from "./beautiulmind";
import type { ProcessInputRequest } from "./beautiulmind";
import type { SessionState } from "./beautiulmind";
import type { StartSessionRequest } from "./beautiulmind";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ListThesesResponse } from "./beautiulmind";
import type { Empty } from "./beautiulmind";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * the services our beautiful mind engine provides
 *
 * @generated from protobuf service beautifulmind.BeautifulMind
 */
export interface IBeautifulMindClient {
    /**
     * @generated from protobuf rpc: ListTheses
     */
    listTheses(input: Empty, options?: RpcOptions): UnaryCall<Empty, ListThesesResponse>;
    /**
     * @generated from protobuf rpc: StartSession
     */
    startSession(input: StartSessionRequest, options?: RpcOptions): UnaryCall<StartSessionRequest, SessionState>;
    /**
     * @generated from protobuf rpc: ProcessInput
     */
    processInput(input: ProcessInputRequest, options?: RpcOptions): UnaryCall<ProcessInputRequest, SessionState>;
    /**
     * @generated from protobuf rpc: AddCard
     */
    addCard(input: AddCardRequest, options?: RpcOptions): UnaryCall<AddCardRequest, Card>;
}
/**
 * the services our beautiful mind engine provides
 *
 * @generated from protobuf service beautifulmind.BeautifulMind
 */
export class BeautifulMindClient implements IBeautifulMindClient, ServiceInfo {
    typeName = BeautifulMind.typeName;
    methods = BeautifulMind.methods;
    options = BeautifulMind.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: ListTheses
     */
    listTheses(input: Empty, options?: RpcOptions): UnaryCall<Empty, ListThesesResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, ListThesesResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: StartSession
     */
    startSession(input: StartSessionRequest, options?: RpcOptions): UnaryCall<StartSessionRequest, SessionState> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<StartSessionRequest, SessionState>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ProcessInput
     */
    processInput(input: ProcessInputRequest, options?: RpcOptions): UnaryCall<ProcessInputRequest, SessionState> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<ProcessInputRequest, SessionState>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: AddCard
     */
    addCard(input: AddCardRequest, options?: RpcOptions): UnaryCall<AddCardRequest, Card> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<AddCardRequest, Card>("unary", this._transport, method, opt, input);
    }
}
