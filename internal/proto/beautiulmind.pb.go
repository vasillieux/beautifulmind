// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v6.31.1
// source: proto/beautiulmind.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_beautiulmind_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_beautiulmind_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_beautiulmind_proto_rawDescGZIP(), []int{0}
}

type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DeckId    string `protobuf:"bytes,2,opt,name=deck_id,json=deckId,proto3" json:"deck_id,omitempty"`
	ConceptId string `protobuf:"bytes,3,opt,name=concept_id,json=conceptId,proto3" json:"concept_id,omitempty"`
	Title     string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Content   string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_beautiulmind_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_proto_beautiulmind_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_proto_beautiulmind_proto_rawDescGZIP(), []int{1}
}

func (x *Card) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Card) GetDeckId() string {
	if x != nil {
		return x.DeckId
	}
	return ""
}

func (x *Card) GetConceptId() string {
	if x != nil {
		return x.ConceptId
	}
	return ""
}

func (x *Card) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Card) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type Concept struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Concept) Reset() {
	*x = Concept{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_beautiulmind_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Concept) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Concept) ProtoMessage() {}

func (x *Concept) ProtoReflect() protoreflect.Message {
	mi := &file_proto_beautiulmind_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Concept.ProtoReflect.Descriptor instead.
func (*Concept) Descriptor() ([]byte, []int) {
	return file_proto_beautiulmind_proto_rawDescGZIP(), []int{2}
}

func (x *Concept) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Concept) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type JourneyStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Card              *Card `protobuf:"bytes,1,opt,name=card,proto3" json:"card,omitempty"`
	AnsweredCorrectly bool  `protobuf:"varint,2,opt,name=answered_correctly,json=answeredCorrectly,proto3" json:"answered_correctly,omitempty"`
}

func (x *JourneyStep) Reset() {
	*x = JourneyStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_beautiulmind_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JourneyStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JourneyStep) ProtoMessage() {}

func (x *JourneyStep) ProtoReflect() protoreflect.Message {
	mi := &file_proto_beautiulmind_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JourneyStep.ProtoReflect.Descriptor instead.
func (*JourneyStep) Descriptor() ([]byte, []int) {
	return file_proto_beautiulmind_proto_rawDescGZIP(), []int{3}
}

func (x *JourneyStep) GetCard() *Card {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *JourneyStep) GetAnsweredCorrectly() bool {
	if x != nil {
		return x.AnsweredCorrectly
	}
	return false
}

// represents the entire state of a game session
type SessionState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Thesis             *Card               `protobuf:"bytes,1,opt,name=thesis,proto3" json:"thesis,omitempty"`
	EvidenceDeck       []*Card             `protobuf:"bytes,2,rep,name=evidence_deck,json=evidenceDeck,proto3" json:"evidence_deck,omitempty"`
	CurrentStep        int32               `protobuf:"varint,3,opt,name=current_step,json=currentStep,proto3" json:"current_step,omitempty"`
	JourneyLog         []*JourneyStep      `protobuf:"bytes,4,rep,name=journey_log,json=journeyLog,proto3" json:"journey_log,omitempty"`
	IsEvidenceRevealed bool                `protobuf:"varint,5,opt,name=is_evidence_revealed,json=isEvidenceRevealed,proto3" json:"is_evidence_revealed,omitempty"`
	CurrentCard        *Card               `protobuf:"bytes,6,opt,name=current_card,json=currentCard,proto3" json:"current_card,omitempty"`
	Concepts           map[string]*Concept `protobuf:"bytes,7,rep,name=concepts,proto3" json:"concepts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SessionState) Reset() {
	*x = SessionState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_beautiulmind_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionState) ProtoMessage() {}

func (x *SessionState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_beautiulmind_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionState.ProtoReflect.Descriptor instead.
func (*SessionState) Descriptor() ([]byte, []int) {
	return file_proto_beautiulmind_proto_rawDescGZIP(), []int{4}
}

func (x *SessionState) GetThesis() *Card {
	if x != nil {
		return x.Thesis
	}
	return nil
}

func (x *SessionState) GetEvidenceDeck() []*Card {
	if x != nil {
		return x.EvidenceDeck
	}
	return nil
}

func (x *SessionState) GetCurrentStep() int32 {
	if x != nil {
		return x.CurrentStep
	}
	return 0
}

func (x *SessionState) GetJourneyLog() []*JourneyStep {
	if x != nil {
		return x.JourneyLog
	}
	return nil
}

func (x *SessionState) GetIsEvidenceRevealed() bool {
	if x != nil {
		return x.IsEvidenceRevealed
	}
	return false
}

func (x *SessionState) GetCurrentCard() *Card {
	if x != nil {
		return x.CurrentCard
	}
	return nil
}

func (x *SessionState) GetConcepts() map[string]*Concept {
	if x != nil {
		return x.Concepts
	}
	return nil
}

type ListThesesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Theses []*Card `protobuf:"bytes,1,rep,name=theses,proto3" json:"theses,omitempty"`
}

func (x *ListThesesResponse) Reset() {
	*x = ListThesesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_beautiulmind_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListThesesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListThesesResponse) ProtoMessage() {}

func (x *ListThesesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_beautiulmind_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListThesesResponse.ProtoReflect.Descriptor instead.
func (*ListThesesResponse) Descriptor() ([]byte, []int) {
	return file_proto_beautiulmind_proto_rawDescGZIP(), []int{5}
}

func (x *ListThesesResponse) GetTheses() []*Card {
	if x != nil {
		return x.Theses
	}
	return nil
}

type StartSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThesisId string `protobuf:"bytes,1,opt,name=thesis_id,json=thesisId,proto3" json:"thesis_id,omitempty"`
}

func (x *StartSessionRequest) Reset() {
	*x = StartSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_beautiulmind_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartSessionRequest) ProtoMessage() {}

func (x *StartSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_beautiulmind_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartSessionRequest.ProtoReflect.Descriptor instead.
func (*StartSessionRequest) Descriptor() ([]byte, []int) {
	return file_proto_beautiulmind_proto_rawDescGZIP(), []int{6}
}

func (x *StartSessionRequest) GetThesisId() string {
	if x != nil {
		return x.ThesisId
	}
	return ""
}

type ProcessInputRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ProcessInputRequest) Reset() {
	*x = ProcessInputRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_beautiulmind_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessInputRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessInputRequest) ProtoMessage() {}

func (x *ProcessInputRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_beautiulmind_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessInputRequest.ProtoReflect.Descriptor instead.
func (*ProcessInputRequest) Descriptor() ([]byte, []int) {
	return file_proto_beautiulmind_proto_rawDescGZIP(), []int{7}
}

func (x *ProcessInputRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type AddCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title     string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Content   string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	ConceptId string `protobuf:"bytes,3,opt,name=concept_id,json=conceptId,proto3" json:"concept_id,omitempty"`
}

func (x *AddCardRequest) Reset() {
	*x = AddCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_beautiulmind_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCardRequest) ProtoMessage() {}

func (x *AddCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_beautiulmind_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCardRequest.ProtoReflect.Descriptor instead.
func (*AddCardRequest) Descriptor() ([]byte, []int) {
	return file_proto_beautiulmind_proto_rawDescGZIP(), []int{8}
}

func (x *AddCardRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddCardRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AddCardRequest) GetConceptId() string {
	if x != nil {
		return x.ConceptId
	}
	return ""
}

var File_proto_beautiulmind_proto protoreflect.FileDescriptor

var file_proto_beautiulmind_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x65, 0x61, 0x75, 0x74, 0x69, 0x75, 0x6c,
	0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x62, 0x65, 0x61, 0x75,
	0x74, 0x69, 0x66, 0x75, 0x6c, 0x6d, 0x69, 0x6e, 0x64, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x7e, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65,
	0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x63,
	0x6b, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0x2d, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x65, 0x0a, 0x0b, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x53, 0x74, 0x65, 0x70,
	0x12, 0x27, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x62, 0x65, 0x61, 0x75, 0x74, 0x69, 0x66, 0x75, 0x6c, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x6c, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x65, 0x64, 0x43,
	0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x6c, 0x79, 0x22, 0xdb, 0x03, 0x0a, 0x0c, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x74, 0x68, 0x65,
	0x73, 0x69, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x65, 0x61, 0x75,
	0x74, 0x69, 0x66, 0x75, 0x6c, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x06,
	0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x12, 0x38, 0x0a, 0x0d, 0x65, 0x76, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x5f, 0x64, 0x65, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x62, 0x65, 0x61, 0x75, 0x74, 0x69, 0x66, 0x75, 0x6c, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x0c, 0x65, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x63, 0x6b,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x65, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x65, 0x70, 0x12, 0x3b, 0x0a, 0x0b, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x5f, 0x6c,
	0x6f, 0x67, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x65, 0x61, 0x75, 0x74,
	0x69, 0x66, 0x75, 0x6c, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79,
	0x53, 0x74, 0x65, 0x70, 0x52, 0x0a, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x4c, 0x6f, 0x67,
	0x12, 0x30, 0x0a, 0x14, 0x69, 0x73, 0x5f, 0x65, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12,
	0x69, 0x73, 0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c,
	0x65, 0x64, 0x12, 0x36, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x65, 0x61, 0x75, 0x74,
	0x69, 0x66, 0x75, 0x6c, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0b, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x45, 0x0a, 0x08, 0x63, 0x6f,
	0x6e, 0x63, 0x65, 0x70, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62,
	0x65, 0x61, 0x75, 0x74, 0x69, 0x66, 0x75, 0x6c, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74,
	0x73, 0x1a, 0x53, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x65, 0x61, 0x75, 0x74, 0x69, 0x66, 0x75, 0x6c, 0x6d,
	0x69, 0x6e, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x41, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68,
	0x65, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06,
	0x74, 0x68, 0x65, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62,
	0x65, 0x61, 0x75, 0x74, 0x69, 0x66, 0x75, 0x6c, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x06, 0x74, 0x68, 0x65, 0x73, 0x65, 0x73, 0x22, 0x32, 0x0a, 0x13, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x49, 0x64, 0x22, 0x27, 0x0a,
	0x13, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x5f, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x63,
	0x65, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x63, 0x65, 0x70, 0x74, 0x49, 0x64, 0x32, 0xb7, 0x02, 0x0a, 0x0d, 0x42, 0x65, 0x61, 0x75,
	0x74, 0x69, 0x66, 0x75, 0x6c, 0x4d, 0x69, 0x6e, 0x64, 0x12, 0x45, 0x0a, 0x0a, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x68, 0x65, 0x73, 0x65, 0x73, 0x12, 0x14, 0x2e, 0x62, 0x65, 0x61, 0x75, 0x74, 0x69,
	0x66, 0x75, 0x6c, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e,
	0x62, 0x65, 0x61, 0x75, 0x74, 0x69, 0x66, 0x75, 0x6c, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x68, 0x65, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4f, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x22, 0x2e, 0x62, 0x65, 0x61, 0x75, 0x74, 0x69, 0x66, 0x75, 0x6c, 0x6d, 0x69, 0x6e, 0x64,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x62, 0x65, 0x61, 0x75, 0x74, 0x69, 0x66, 0x75, 0x6c,
	0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x4f, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x22, 0x2e, 0x62, 0x65, 0x61, 0x75, 0x74, 0x69, 0x66, 0x75, 0x6c, 0x6d, 0x69, 0x6e,
	0x64, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x62, 0x65, 0x61, 0x75, 0x74, 0x69, 0x66, 0x75,
	0x6c, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1d, 0x2e,
	0x62, 0x65, 0x61, 0x75, 0x74, 0x69, 0x66, 0x75, 0x6c, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x41, 0x64,
	0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x62,
	0x65, 0x61, 0x75, 0x74, 0x69, 0x66, 0x75, 0x6c, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x42, 0x15, 0x5a, 0x13, 0x62, 0x65, 0x61, 0x75, 0x74, 0x69, 0x66, 0x75, 0x6c, 0x6d, 0x69,
	0x6e, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_beautiulmind_proto_rawDescOnce sync.Once
	file_proto_beautiulmind_proto_rawDescData = file_proto_beautiulmind_proto_rawDesc
)

func file_proto_beautiulmind_proto_rawDescGZIP() []byte {
	file_proto_beautiulmind_proto_rawDescOnce.Do(func() {
		file_proto_beautiulmind_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_beautiulmind_proto_rawDescData)
	})
	return file_proto_beautiulmind_proto_rawDescData
}

var file_proto_beautiulmind_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_beautiulmind_proto_goTypes = []interface{}{
	(*Empty)(nil),               // 0: beautifulmind.Empty
	(*Card)(nil),                // 1: beautifulmind.Card
	(*Concept)(nil),             // 2: beautifulmind.Concept
	(*JourneyStep)(nil),         // 3: beautifulmind.JourneyStep
	(*SessionState)(nil),        // 4: beautifulmind.SessionState
	(*ListThesesResponse)(nil),  // 5: beautifulmind.ListThesesResponse
	(*StartSessionRequest)(nil), // 6: beautifulmind.StartSessionRequest
	(*ProcessInputRequest)(nil), // 7: beautifulmind.ProcessInputRequest
	(*AddCardRequest)(nil),      // 8: beautifulmind.AddCardRequest
	nil,                         // 9: beautifulmind.SessionState.ConceptsEntry
}
var file_proto_beautiulmind_proto_depIdxs = []int32{
	1,  // 0: beautifulmind.JourneyStep.card:type_name -> beautifulmind.Card
	1,  // 1: beautifulmind.SessionState.thesis:type_name -> beautifulmind.Card
	1,  // 2: beautifulmind.SessionState.evidence_deck:type_name -> beautifulmind.Card
	3,  // 3: beautifulmind.SessionState.journey_log:type_name -> beautifulmind.JourneyStep
	1,  // 4: beautifulmind.SessionState.current_card:type_name -> beautifulmind.Card
	9,  // 5: beautifulmind.SessionState.concepts:type_name -> beautifulmind.SessionState.ConceptsEntry
	1,  // 6: beautifulmind.ListThesesResponse.theses:type_name -> beautifulmind.Card
	2,  // 7: beautifulmind.SessionState.ConceptsEntry.value:type_name -> beautifulmind.Concept
	0,  // 8: beautifulmind.BeautifulMind.ListTheses:input_type -> beautifulmind.Empty
	6,  // 9: beautifulmind.BeautifulMind.StartSession:input_type -> beautifulmind.StartSessionRequest
	7,  // 10: beautifulmind.BeautifulMind.ProcessInput:input_type -> beautifulmind.ProcessInputRequest
	8,  // 11: beautifulmind.BeautifulMind.AddCard:input_type -> beautifulmind.AddCardRequest
	5,  // 12: beautifulmind.BeautifulMind.ListTheses:output_type -> beautifulmind.ListThesesResponse
	4,  // 13: beautifulmind.BeautifulMind.StartSession:output_type -> beautifulmind.SessionState
	4,  // 14: beautifulmind.BeautifulMind.ProcessInput:output_type -> beautifulmind.SessionState
	1,  // 15: beautifulmind.BeautifulMind.AddCard:output_type -> beautifulmind.Card
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_beautiulmind_proto_init() }
func file_proto_beautiulmind_proto_init() {
	if File_proto_beautiulmind_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_beautiulmind_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_beautiulmind_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_beautiulmind_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Concept); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_beautiulmind_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JourneyStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_beautiulmind_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_beautiulmind_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListThesesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_beautiulmind_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_beautiulmind_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessInputRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_beautiulmind_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_beautiulmind_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_beautiulmind_proto_goTypes,
		DependencyIndexes: file_proto_beautiulmind_proto_depIdxs,
		MessageInfos:      file_proto_beautiulmind_proto_msgTypes,
	}.Build()
	File_proto_beautiulmind_proto = out.File
	file_proto_beautiulmind_proto_rawDesc = nil
	file_proto_beautiulmind_proto_goTypes = nil
	file_proto_beautiulmind_proto_depIdxs = nil
}
